-- {
--   "JuanZoran/Trans.nvim",
--   -- run = 'bash ./install.sh',
--   -- https://github.com/skywind3000/ECDICT-ultimate/releases/download/1.0.0/ecdict-ultimate-sqlite.zip
--   keys = {
--     -- 可以换成其他你想映射的键
--     { "tt", mode = { "n", "x" }, "<Cmd>Translate<CR>", desc = " Translate" },
--     { "ts", mode = { "n", "x" }, "<Cmd>TransPlay<CR>", desc = " 自动发音" },
--
--     -- 目前这个功能的视窗还没有做好，可以在配置里将view.i改成hover
--     -- { 'mi', '<Cmd>TranslateInput<CR>', desc = ' Translate From Input' },
--   },
--   dependencies = { "kkharji/sqlite.lua", lazy = true },
--   opts = {
--     -- your configuration there
--   },
--   config = function()
--     require("Trans").setup {
--       db_path = "$HOME/.dotfiles/nvim/ultimate.db",
--     }
--   end,
-- },

-- {
--   "hjkl01/translate.nvim",
--   cmd = "Translate",
--   lazy = false,
--   init = require("core.utils").load_mappings "translate",
--   config = function()
--     require("translate").setup {}
--   end,
-- },

-- {
--   "folke/tokyonight.nvim",
--   lazy = false,
--   priority = 1000,
--   config = function()
--     require "plugins.configs.colorscheme"
--   end,
-- },

-- local present, color_config = pcall(require, "tokyonight")
--
-- if not present then
--   return
-- end
--
-- local options = {
--   -- your configuration comes here
--   -- or leave it empty to use the default settings
--   style = "day",          -- The theme comes in three styles, `storm`, `moon`, a darker variant `night` and `day`
--   light_style = "day",    -- The theme is used when the background is set to light
--   transparent = false,    -- Enable this to disable setting the background color
--   terminal_colors = true, -- Configure the colors used when opening a `:terminal` in Neovim
--   styles = {
--     -- Style to be applied to different syntax groups
--     -- Value is any valid attr-list value for `:help nvim_set_hl`
--     comments = { italic = true },
--     keywords = { italic = true },
--     functions = { italic = true },
--     variables = {},
--     -- Background styles. Can be "dark", "transparent" or "normal"
--     sidebars = "dark",             -- style for sidebars, see below
--     floats = "dark",               -- style for floating windows
--   },
--   sidebars = { "qf", "help" },     -- Set a darker background on sidebar-like windows. For example: `["qf", "vista_kind", "terminal", "packer"]`
--   day_brightness = 0.3,            -- Adjusts the brightness of the colors of the **Day** style. Number between 0 and 1, from dull to vibrant colors
--   hide_inactive_statusline = true, -- Enabling this option, will hide inactive statuslines and replace them with a thin border instead. Should work with the standard **StatusLine** and **LuaLine**.
--   dim_inactive = false,            -- dims inactive windows
--   lualine_bold = true,             -- When `true`, section headers in the lualine theme will be bold
--   --- You can override specific color groups to use other groups or a hex color
--   --- function will be called with a ColorScheme table
--   ---@param colors ColorScheme
--   on_colors = function(colors) end,
--   --- You can override specific highlights to use other groups or a hex color
--   --- function will be called with a Highlights and ColorScheme table
--   --- @param highlights Highlights
--   --- @param colors ColorScheme
--   on_highlights = function(highlights, colors)
--     highlights.LineNr = {
--       bg = "#000000",
--     }
--   end,
--   -- },
-- }
--
-- color_config.setup(options)
-- vim.cmd [[ colorscheme tokyonight-moon ]]
--
--
-- {
--   "NvChad/nvim-colorizer.lua",
--   config = function()
--     -- Attach to buffer
--     require("colorizer").attach_to_buffer(0, { mode = "background", css = true })
--
--     require("colorizer").setup {
--       filetypes = { "*" },
--       user_default_options = {
--         RGB = true,          -- #RGB hex codes
--         RRGGBB = true,       -- #RRGGBB hex codes
--         names = true,        -- "Name" codes like Blue or blue
--         RRGGBBAA = false,    -- #RRGGBBAA hex codes
--         AARRGGBB = false,    -- 0xAARRGGBB hex codes
--         rgb_fn = false,      -- CSS rgb() and rgba() functions
--         hsl_fn = false,      -- CSS hsl() and hsla() functions
--         css = false,         -- Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB
--         css_fn = false,      -- Enable all CSS *functions*: rgb_fn, hsl_fn
--         -- Available modes for `mode`: foreground, background,  virtualtext
--         mode = "background", -- Set the display mode.
--         -- Available methods are false / true / "normal" / "lsp" / "both"
--         -- True is same as normal
--         tailwind = false,                               -- Enable tailwind colors
--         -- parsers can contain values used in |user_default_options|
--         sass = { enable = false, parsers = { "css" } }, -- Enable sass colors
--         virtualtext = "■",
--         -- update color values even if buffer is not focused
--         -- example use: cmp_menu, cmp_docs
--         always_update = false,
--       },
--       -- all the sub-options of filetypes apply to buftypes
--       buftypes = {},
--     }
--   end,
-- }
--
--
-- {
--   "iamcco/markdown-preview.nvim",
--   cmd = { "MarkdownPreviewToggle", "MarkdownPreview", "MarkdownPreviewStop" },
--   build = "cd app && yarn install",
--   init = function()
--     vim.g.mkdp_filetypes = { "markdown" }
--   end,
--   ft = { "markdown" },
-- },
